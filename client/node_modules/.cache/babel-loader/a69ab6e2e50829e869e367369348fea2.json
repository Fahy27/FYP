{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\evanf\\\\Downloads\\\\Archive\\\\client\\\\src\\\\components\\\\Rewards\\\\Rewards.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport useStyles from './styles';\nimport { Card, CardContent, CardActions, Typography, Box, Radio, RadioGroup, FormControlLabel, FormControl, FormLabel, Button } from '@material-ui/core';\nimport { api } from '../../api/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Rewards() {\n  _s();\n\n  var _rewards$map;\n\n  const classes = useStyles();\n  const [rewards, setRewards] = useState(null);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    async function loadRewards() {\n      const fetchRewards = await api.get(\"http://localhost:5000/rewards/list\");\n      setRewards(fetchRewards.data);\n    }\n\n    loadRewards();\n  }, []);\n\n  async function buyReward(id) {\n    try {\n      const fetchReward = await api.post(\"/rewards/buy\", {\n        _id: id\n      });\n      const rewardText = fetchReward.data.text;\n      alert(\"Reward message: \" + rewardText);\n      window.location.reload();\n    } catch (err) {\n      alert(\"Not enough cash or not signed in\");\n    }\n  }\n\n  return (_rewards$map = rewards === null || rewards === void 0 ? void 0 : rewards.map(reward => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      className: `${classes.rewardBox}`,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        variant: \"outlined\",\n        children: [/*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              fontSize: 14\n            },\n            color: \"textSecondary\",\n            gutterBottom: true,\n            children: reward.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: [\"Cost: \", reward.cost]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            onClick: () => {\n              buyReward(reward._id);\n            },\n            children: \"Buy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, reward._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false))) !== null && _rewards$map !== void 0 ? _rewards$map : \"Loading...\";\n}\n\n_s(Rewards, \"Ixy3VPxLOwlzNlxWkOLDk9IYUVs=\", false, function () {\n  return [useStyles, useDispatch];\n});\n\n_c = Rewards;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rewards\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useStyles","Card","CardContent","CardActions","Typography","Box","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","Button","api","Rewards","classes","rewards","setRewards","dispatch","loadRewards","fetchRewards","get","data","buyReward","id","fetchReward","post","_id","rewardText","text","alert","window","location","reload","err","map","reward","rewardBox","fontSize","name","cost"],"sources":["C:/Users/evanf/Downloads/Archive/client/src/components/Rewards/Rewards.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport useStyles from './styles';\nimport { Card, CardContent, CardActions, Typography, Box, Radio, RadioGroup, FormControlLabel, FormControl, FormLabel, Button } from '@material-ui/core'\nimport { api } from '../../api/index'\n\n\n\nexport default function Rewards() {\n    const classes = useStyles();\n    const [rewards, setRewards] = useState(null)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        async function loadRewards() {\n            const fetchRewards = await api.get(\"http://localhost:5000/rewards/list\")\n            setRewards(fetchRewards.data)\n        }\n        loadRewards()\n        \n    }, [])\n\n    async function buyReward(id) {\n        try {\n            const fetchReward = await api.post(\"/rewards/buy\", {_id: id})\n            const rewardText = fetchReward.data.text\n            alert(\"Reward message: \" + rewardText)\n            window.location.reload()\n            \n        } catch (err) {\n            alert(\"Not enough cash or not signed in\")\n        }\n    }\n\n    \n    \n\n    \n    return (\n       rewards?.map(reward => (\n        <>\n            <Box className={`${classes.rewardBox}`} key={reward._id}>\n                <Card variant=\"outlined\">\n                    <CardContent>\n                        <Typography sx={{ fontSize: 14 }} color=\"textSecondary\" gutterBottom>\n                            {reward.name}\n                        </Typography>\n            \n                        <Typography variant=\"body2\">\n                            Cost: {reward.cost}\n                        </Typography>\n                    </CardContent>\n                    <CardActions>\n                        <Button size=\"small\" onClick={() => {buyReward(reward._id)}}>Buy</Button>\n                    </CardActions>\n                </Card>\n            </Box>\n        </>\n       )) ?? \"Loading...\"\n    );\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,SAASC,IAAT,EAAeC,WAAf,EAA4BC,WAA5B,EAAyCC,UAAzC,EAAqDC,GAArD,EAA0DC,KAA1D,EAAiEC,UAAjE,EAA6EC,gBAA7E,EAA+FC,WAA/F,EAA4GC,SAA5G,EAAuHC,MAAvH,QAAqI,mBAArI;AACA,SAASC,GAAT,QAAoB,iBAApB;;;AAIA,eAAe,SAASC,OAAT,GAAmB;EAAA;;EAAA;;EAC9B,MAAMC,OAAO,GAAGd,SAAS,EAAzB;EACA,MAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAMmB,QAAQ,GAAGlB,WAAW,EAA5B;EAEAF,SAAS,CAAC,MAAM;IACZ,eAAeqB,WAAf,GAA6B;MACzB,MAAMC,YAAY,GAAG,MAAMP,GAAG,CAACQ,GAAJ,CAAQ,oCAAR,CAA3B;MACAJ,UAAU,CAACG,YAAY,CAACE,IAAd,CAAV;IACH;;IACDH,WAAW;EAEd,CAPQ,EAON,EAPM,CAAT;;EASA,eAAeI,SAAf,CAAyBC,EAAzB,EAA6B;IACzB,IAAI;MACA,MAAMC,WAAW,GAAG,MAAMZ,GAAG,CAACa,IAAJ,CAAS,cAAT,EAAyB;QAACC,GAAG,EAAEH;MAAN,CAAzB,CAA1B;MACA,MAAMI,UAAU,GAAGH,WAAW,CAACH,IAAZ,CAAiBO,IAApC;MACAC,KAAK,CAAC,qBAAqBF,UAAtB,CAAL;MACAG,MAAM,CAACC,QAAP,CAAgBC,MAAhB;IAEH,CAND,CAME,OAAOC,GAAP,EAAY;MACVJ,KAAK,CAAC,kCAAD,CAAL;IACH;EACJ;;EAMD,uBACGd,OADH,aACGA,OADH,uBACGA,OAAO,CAAEmB,GAAT,CAAaC,MAAM,iBAClB;IAAA,uBACI,QAAC,GAAD;MAAK,SAAS,EAAG,GAAErB,OAAO,CAACsB,SAAU,EAArC;MAAA,uBACI,QAAC,IAAD;QAAM,OAAO,EAAC,UAAd;QAAA,wBACI,QAAC,WAAD;UAAA,wBACI,QAAC,UAAD;YAAY,EAAE,EAAE;cAAEC,QAAQ,EAAE;YAAZ,CAAhB;YAAkC,KAAK,EAAC,eAAxC;YAAwD,YAAY,MAApE;YAAA,UACKF,MAAM,CAACG;UADZ;YAAA;YAAA;YAAA;UAAA,QADJ,eAKI,QAAC,UAAD;YAAY,OAAO,EAAC,OAApB;YAAA,qBACWH,MAAM,CAACI,IADlB;UAAA;YAAA;YAAA;YAAA;UAAA,QALJ;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAUI,QAAC,WAAD;UAAA,uBACI,QAAC,MAAD;YAAQ,IAAI,EAAC,OAAb;YAAqB,OAAO,EAAE,MAAM;cAACjB,SAAS,CAACa,MAAM,CAACT,GAAR,CAAT;YAAsB,CAA3D;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QAVJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ,GAA6CS,MAAM,CAACT,GAApD;MAAA;MAAA;MAAA;IAAA;EADJ,iBADD,CADH,uDAoBS,YApBT;AAsBH;;GApDuBb,O;UACJb,S,EAECD,W;;;KAHGc,O"},"metadata":{},"sourceType":"module"}